package com.example.Student_Library_Management_System.Services;

import com.example.Student_Library_Management_System.DTOs.StudentUpdateMobNoDTO;
import com.example.Student_Library_Management_System.Enums.CardStatus;
import com.example.Student_Library_Management_System.Models.Card;
import com.example.Student_Library_Management_System.Models.Student;
import com.example.Student_Library_Management_System.Repositories.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {

    @Autowired
    StudentRepository studentRepository;

    public String getNameByEmail(String email) {
      Student student= studentRepository.findByEmail(email);
      return student.getName();
    }

    public String addStudent(Student student) {

        //Student from the postman is already the basic attributes set.

        //Card Should be autogenerated when createStudent function is called.
        Card card= new Card();
        card.setCardStatus(CardStatus.ACTIVATED); //Card status is being set.
        card.setStudent(student);

        //set the student
        student.setCard(card);

        //If there was a unidirectional mapping : we had to save both of them them
        //studentRepo.save () and cardRepo.save()
        //But we are super advance and are using bidirectional : Child will automatically be saved

        studentRepository.save(student);

        return "Student and card added successfully";

    }

    public String updateMobileNo(StudentUpdateMobNoDTO studentUpdateMobNoDTO) {
        Student student= studentRepository.findById(studentUpdateMobNoDTO.getId()).get();
        student.setMobNo(studentUpdateMobNoDTO.getMobNo());
        studentRepository.save(student);
        return "Mobile No updated successfully";
    }
}
